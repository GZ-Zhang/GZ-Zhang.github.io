[{"id":"59157d35f2c305377f2310cdfdd9d9c3","title":"hexo部署到Github","content":"GitHub Pages 快速入门\n\n\n\n\n\n\n\n\n官方文档；https://docs.github.com/cn/pages\n1. 新建github仓库​    仓库名称限制为：用户名+.github.io\n\n2. 安装hexo上传插件npm install hexo-deployer-git --save\n\n3. 修改hexo配置文件指定仓库路径可在文件夹中直接打开文件，也可通过vim直接编辑,如下图\nvim _config.yml \n#找到Deployment\ndeploy:  \n\ttype: git  \n\trepo: 你的github仓库路径  \n\tbranch: master\n\n\n\n4. 推送站点到githubhexo d\n\n推送过程中需要输入你的github用户名和密码。但是在2021年8月14日开始github官方就加强安全访问。不能通过原有账号密码git访问，密码需要用官方的token或者采用ssh公私钥访问。否则会出现下图：鉴权失败（用户名密码错误）\n官方文档:https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls\n\n\n\n\n\n\n\n\n\nCloning with HTTPS URLs\nThe https:// clone URLs are available on all repositories, regardless of visibility. https:// clone URLs work even if you are behind a firewall or proxy.\nWhen you git clone, git fetch, git pull, or git push to a remote repository using HTTPS URLs on the command line, Git will ask for your GitHub username and password. When Git prompts you for your password, enter your personal access token. Alternatively, you can use a credential helper like Git Credential Manager. Password-based authentication for Git has been removed in favor of more secure authentication methods. For more information, see “Creating a personal access token.”\n\n\n\n\n\n\n\n\n\n机翻：当你使用命令行上的HTTPS url将git克隆、获取、提取或推送到远程存储库时，git会询问你的GitHub用户名和密码。当Git提示您输入密码时，输入您的个人访问令牌。或者，也可以使用像Git credential Manager这样的凭证帮助器。Git的基于密码的身份验证已经被删除，取而代之的是更安全的身份验证方法。有关更多信息，请参见“创建个人访问令牌”。\n大概意思就是用户密码不可用了，需要使用户加token验证方式\n登录github 设置setting-&gt;Developer Settings-&gt;Prosonal access tokens 创建一个新token。然后就可以拿这个token当密码输入了。\n\n用户名和token输入后，上传成功。\n5、访问输入你的仓库名称,即可访问成功。\nhttps://gz-zhang.github.io/\n\n","slug":"blog/hexo部署到Github","date":"2022-11-24T15:27:00.000Z","categories_index":"","tags_index":"blog","author_index":"Guzong"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"","slug":"blog/hexo博客同步管理及迁移","date":"2022-11-24T15:22:22.251Z","categories_index":"","tags_index":"","author_index":"Guzong"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-11-24T15:06:09.004Z","categories_index":"","tags_index":"PS3,Games","author_index":"Guzong"},{"id":"c868eee24d603547e6f7a305ed68a45b","title":"解决hexo博客中插入图片失败","content":"解决hexo博客中插入图片失败前言：​        搭建博客后按照官方文档配置后，图片一直无法显示，在网上百度一直没有解决方案，最终在官方文档评论区发现解决方案。思考了一下，遇到问题如果有评论区还是要优先查看一下再去百度，大家遇到相似问题概率比较大，还是要感谢评论区大神，推荐详细阅读第一个参考链接，启发很大。\n\n\n\n\n\n\n\n\n\n参考链接：\nhexo博客中插入图片失败——解决思路及个人最终解决办法\nhexo+github快速搭建html5静态网页全过程\n解决方案：1. 官网解决方案\n\n\n\n\n\n\n\n\n官方文档：https://hexo.io/zh-cn/docs/asset-folders\n使用 Markdown 嵌入图片hexo-renderer-marked 3.1.0 引入了一个新的选项，其允许你无需使用 asset_img 标签插件就可以在 markdown 中嵌入图片\n如需启用：\n_config.yml\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n\n启用后，资源图片将会被自动解析为其对应文章的路径。例如： image.jpg 位置为 /2020/01/02/foo/image.jpg ，这表示它是 /2020/01/02/foo/ 文章的一张资源图片， ![](image.jpg) 将会被解析为 &lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;\n2. 百度搜索得到解决方案\n方法1：设置图片直接引用网络资源\n方法2：使用hexo-asset-image插件\n\n方案一可以选择将markdown图片文件存放在云中，编写时直接引用云资源，考虑目前暂时还不需要所以放弃，选择方案二\n方法2：使用hexo-asset-image插件\n打开根目录下_config.yml文件找到post_asset_folder: true 设置为true,在下面添加(可参靠上文，官网解决方案：使用 Markdown 嵌入图片)：\nmarked:\n  prependRoot: true\n  postAsset: true\n安装插件\nnpm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save\n可以选择将Typora设置为./${filename} ，目的是自动在目录下建立与文件同名的文件夹方便存取\n\n\n\n至此就解决图片无法加载问题，就已解决\n注意\n若要上传服务器，图片引用链接应直接保存文件名即可，放入博客同名文件下即可。\n\n\n\n","slug":"解决hexo博客中插入图片失败","date":"2022-11-17T10:15:39.000Z","categories_index":"blogs","tags_index":"blog","author_index":"Guzong"},{"id":"7039b3832616e1bd4046358fa2a1004f","title":"博客集成评论功能---Gitalk","content":"博客集成评论功能—Gitalk一、什么是 GitalkGitalk 的官方网站地址是: gitalk.github.io，是一个基于 GitHub Issue 和 Preact 开发的评论插件。\n二、特性\n使用 GitHub 登录\n支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]\n支持个人或组织\n无干扰模式（设置 distractionFreeMode 为 true 开启）\n快捷键提交评论 （cmd|ctrl + enter）\n\n三、安装两种方式\n直接引入\n\n&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\n&lt;!-- or --&gt;\n\n&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\n\nnpm 安装\n\nnpm i --save gitalk\nimport &#39;gitalk&#x2F;dist&#x2F;gitalk.css&#39;\nimport Gitalk from &#39;gitalk&#39;\n\n四、使用\n首先，您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论，\n\n\n创建完成后，点击Settings 打开 Issues 功能，默认是打开的\n\n然后需要创建 GitHub Application，如果没有 点击这里申请，Authorization callback URL 填写当前使用插件页面的域名。\n\n开创建应用程序页面，填写信息，两个 URL 就是你网站的域名。应用名称与描述可自起。 可参考下图\n\n\n应用程序创建成功后跳转到了以下页面，图中 Client ID 和 Client Secret是我们需要的东西\n\n\n\n五、集成 Gitalk方式一只需要将如下代码引入你想添加评论的 html 或者 jsp 页面中就可以使用了\n&lt;!-- 引入 --&gt;\n&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\n&lt;!-- 在页面中添加一个容器--&gt;\n&lt;div id&#x3D;&quot;gitalk-container&quot;&gt;&lt;&#x2F;div&gt;\n\n使用下面的 Javascript 代码生成 gitalk 插件\n var gitalk &#x3D; new Gitalk(&#123;   \n     clientID: &#39;GitHub Application Client ID&#39;,   &#x2F;&#x2F;GitHub Application Client ID\n     clientSecret: &#39;GitHub Application Client Secret&#39;,   &#x2F;&#x2F;GitHub Application Client Secret\n     repo: &#39;GitHub repo&#39;,   &#x2F;&#x2F;仓库名称(GitHub repo)\n     owner: &#39;GitHub repo owner&#39;,   &#x2F;&#x2F;仓库拥有者(GitHub repo owner) \n     admin: [&#39;GitHub repo owner and collaborators, only these guys can initialize github issues&#39;],   \n     id: location.pathname,      &#x2F;&#x2F; 请确保你的 location 连接小于 50 个字符，否则，插件会生成失败   \n     distractionFreeMode: false &#x2F;&#x2F; 专注模式 \n&#125;)  \n\n    gitalk.render(&#39;gitalk-container&#39;)\n\n方式二使用react的组件：\nimport GitalkComponent from &#39;gitalk&#x2F;dist&#x2F;gitalk-component&#39;\n\n&lt;GitalkComponent\n options&#x3D;&#123;&#123;\n clientID: &#39;223232323adawdawd&#39;,\n clientSecret: &#39;ddadawdadaddawdawdawdawdwadawd&#39;,\n repo: &#39;dailyProject&#39;,\n owner: &#39;Mrrabbitan&#39;,\n admin: [&#39;Mrrabbitan&#39;],\n id: location.pathname, &#x2F;&#x2F; Ensure uniqueness and length less than 50\n distractionFreeMode: false, &#x2F;&#x2F; Facebook-like distraction free mode\n        &#125;&#125;\n &gt;&lt;&#x2F;GitalkComponent&gt;\n\n总结以上就是添加gitalk详细步骤，具体操作可参考官方文档：https://github.com/gitalk/gitalk/blob/master/readme-cn.md\n注意\n如若第一次进入时评论模块加载不出来，需要注册 Github Application 的账号登录评论模块后刷新页面，就可以正常使用了。\nGitHub 对 Issue 的 label 存在限制，不能超过 50 个字符。\nPS: label 标签就是文章页面的链接地址，如果地址过长，会导致加载 Gitalk 插件失败。\n解决方案，可参考链接：https://github.com/gitalk/gitalk/issues/102\n\n\n\n参考文章：\n平酱的填坑札记：博客集成评论功能—Gitalk\n超Ren专属：超 Nice 的评论组件 —— Gitalk\n官方文档：https://github.com/gitalk/gitalk/blob/master/readme-cn.md\n","slug":"博客集成评论功能-Gitalk","date":"2022-11-17T08:53:51.000Z","categories_index":"","tags_index":"blog","author_index":"Guzong"},{"id":"8efdfe4872c447599d42e0a8f10aa3e3","title":"Hexo搭建博客","content":"参考官方文档：https://hexo.io/zh-cn/\n前言​        作为技术人员，都希望拥有一个自己的技术博客，在查阅资料选择Hexo+Github的博客系统，这里将其过程记录下来。\n\n\n\n\n\n\n\n\n\n博客部署在linux环境下, CentOS 7.x\n安装前提安装 Hexo 相当简单，只需要先安装下列应用程序即可：\n\nNode.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)\nGit\n\n如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 安装 Hexo 步骤。\n如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。\n\n安装 Git两种方式：在线安装（不推荐），解压安装。\n\n在线安装（使用yum安装的版本为1.8.3，这个版本太老）\nyum install git\ngit --version\n解压安装\n想要使用最新版的git，进入git 在GitHub上发布版本页面：https://github.com/git/git/tags  选择最新的tar.gz包下载即可。\n# 1. 上传到指定目录 &#x2F;opt&#x2F;software\n# 2. 解压到当前目录\ntar -zxvf git-2.38.1.tar.gz\nrm -rf git-2.9.5.tar.gz \n# 进入到解压后的文件夹\ncd  .&#x2F;git-2.38.1\n# 3. 解压后的源码需要编译源码，不过在此之前需要安装编译所需要的依赖。中途出现提示的时候输入y即可\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\n# 4. 安装依赖时，自动安装了Git，因此需要卸载旧版本Git\ngit --version\nyum remove git\n# 5. 编译git源码\nmake prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git all\n# 6. 安装git至&#x2F;usr&#x2F;local&#x2F;git路径\nmake prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git install\n\n# 配置环境变量配置\nvim &#x2F;etc&#x2F;profile\n\n# 在最底部加上\nPATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;git&#x2F;bin\nexport PATH\n\n# 刷新环境变量\nsource &#x2F;etc&#x2F;profile\n# 查看Git是否安装完成\ngit --version\n\n参考文章：\nhttps://blog.csdn.net/w_shimmer/article/details/124342141\nhttps://blog.csdn.net/weixin_43847283/article/details/124781559\n\n\n安装 node\n查看系统位数\n\nuname -a\n\n\n官网下载对应文件\n\n\n\n下载下来的tar文件上传到服务器并且解压，然后通过建立软连接变为全局\ncd &#x2F;opt&#x2F;software\n# 上传文件\ntar -zxvf node-v16.18.0-linux-x64.tar.xz \n# 删除压缩包\nrm -rf node-v16.18.0-linux-x64.tar.xz \n# 重命名\nmv node-v16.18.0-linux-x64&#x2F; node\n# 确认一下nodejs下bin目录是否有node 和npm文件\ncd node&#x2F;bin\nls\n\n\n# 建立软连接，变为全局\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;local&#x2F;bin\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin\n检验\nnode -v\nnpm -v\n\n参考文章：\nhttps://blog.csdn.net/weixin_43847283/article/details/124781443\n\n\n安装Hexo\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\ncd &#x2F;opt&#x2F;software\nmkdir hexo\ncd hexo&#x2F;\nnpm install -g hexo-cli\n\n\nhexo在nodejs的nodejs/bin目录可以找到hexo命令，采用软连接把hexo命令添加到全局\n\n# 根据个人nodejs路径进行配置\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;hexo   &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\n# 配置错了可以删除再重新配置\nrm -rf  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;hexo   &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\n\n\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server\n\n查看是否生效\nhexo -v\n\n\n部署hexo\n\nhexo init blog\ncd blog\nnpm install\n# 启动\nhexo s\n\n参考链接：\nhttps://blog.csdn.net/weixin_43847283/article/details/124781731\n","slug":"Hexo搭建博客","date":"2022-11-16T08:45:34.000Z","categories_index":"","tags_index":"blog","author_index":"Guzong"}]