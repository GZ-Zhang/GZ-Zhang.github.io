{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/svg/bilibili.svg","path":"svg/bilibili.svg","modified":1,"renderable":0},{"_id":"node_modules/hexo-theme-aurora/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-16x16.png","path":"icons/favicon-16x16.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-32x32.png","path":"icons/favicon-32x32.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/404.1a6cd5bd.css","path":"static/css/404.1a6cd5bd.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/about.32dfa3b0.css","path":"static/css/about.32dfa3b0.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/app.0d31776f.css","path":"static/css/app.0d31776f.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/archives.c0d49bd5.css","path":"static/css/archives.c0d49bd5.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/categories.10e2be12.css","path":"static/css/categories.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/chunk-libs.eebac533.css","path":"static/css/chunk-libs.eebac533.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/page.749ad047.css","path":"static/css/page.749ad047.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/post.9f951a60.css","path":"static/css/post.9f951a60.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/result.10e2be12.css","path":"static/css/result.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/tags.10e2be12.css","path":"static/css/tags.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/img/default-cover.df7c128c.jpg","path":"static/img/default-cover.df7c128c.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/404.00d640a8.js","path":"static/js/404.00d640a8.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/about.024aacd1.js","path":"static/js/about.024aacd1.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/app.6d2c358d.js","path":"static/js/app.6d2c358d.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/archives.574ac664.js","path":"static/js/archives.574ac664.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/categories.90aa5475.js","path":"static/js/categories.90aa5475.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/chunk-libs.dc6146cd.js","path":"static/js/chunk-libs.dc6146cd.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/page.a02618ad.js","path":"static/js/page.a02618ad.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/post.cebfbaa4.js","path":"static/js/post.cebfbaa4.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/result.39470350.js","path":"static/js/result.39470350.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/tags.2ad613f5.js","path":"static/js/tags.2ad613f5.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1668702824467},{"_id":"source/_posts/Hexo搭建博客.md","hash":"e08dd64056d2a910de40ff1a734fef1b3c545b10","modified":1668677360952},{"_id":"source/_posts/hello-world.md","hash":"fc1866d58416c74a38d2c47e167fdb9c0699e95e","modified":1668530125315},{"_id":"source/_posts/博客集成评论功能-Gitalk.md","hash":"853216324609268206a6b36ed02fe5f2ce14e6b9","modified":1668677175461},{"_id":"source/_posts/解决hexo博客中插入图片失败.md","hash":"396a713e9d0fe327227f8e5aa3a0854cd2722cd7","modified":1668681289527},{"_id":"source/about/index.md","hash":"5feda729254da30933ae3050a5fc609fc9ba0c25","modified":1668529921648},{"_id":"source/message-board/index.md","hash":"aff895776f1fae3ca452f80a3a9ec745b38d660d","modified":1668500586791},{"_id":"source/svg/bilibili.svg","hash":"5d4b19f1569f5898062e113a3eda70732efad0d0","modified":1668521449003},{"_id":"source/_posts/Hexo搭建博客/image-20221116153041011.png","hash":"47e98d58809f849bdd2a0e9959463e1033378b9f","modified":1668588665559},{"_id":"source/_posts/解决hexo博客中插入图片失败/image-20221117173919413.png","hash":"18ce106ab95d8880da3028c934af3f07c3316c8f","modified":1668680231163},{"_id":"source/_posts/Hexo搭建博客/image-20221116153606803.png","hash":"07b495e6a6bc369f08bf3396ccfedc4915969865","modified":1668588665561},{"_id":"source/_posts/博客集成评论功能-Gitalk/image-20221117161922198.png","hash":"97e7d2eec4d3a0c8b6afb8ab313321495ea67a99","modified":1668675632592},{"_id":"source/_posts/博客集成评论功能-Gitalk/image-20221117162810692.png","hash":"7c6ad1f2d2589fee4a89ecff9be4d3ee1a0283c7","modified":1668675632589},{"_id":"source/_posts/博客集成评论功能-Gitalk/image-20221117163158794.png","hash":"21d4bb055701431575019fe2811705af08a42bfe","modified":1668675632593},{"_id":"source/_posts/解决hexo博客中插入图片失败/image-20221117180553792.png","hash":"e0574035552a09844c5a648e15b7fdf0888614db","modified":1668680231165},{"_id":"node_modules/hexo-theme-aurora/.browserslistrc","hash":"db215b841182d2af3259a1c1d6e1957bca333970","modified":1668499977685},{"_id":"node_modules/hexo-theme-aurora/CHANGELOG.md","hash":"e68f3af8af17d326a48e1b317e01d7429193217e","modified":1668499977928},{"_id":"node_modules/hexo-theme-aurora/CHANGELOG_CN.md","hash":"5d13c251e8b77fd86870da50f3be98f8822edc66","modified":1668499977927},{"_id":"node_modules/hexo-theme-aurora/LICENSE","hash":"21cf269018b0cf04e1126b6b9b1a5e6af7c5e61f","modified":1668499977691},{"_id":"node_modules/hexo-theme-aurora/README.md","hash":"c50f58b08b75780990c18ab85761e3e24aac0d90","modified":1668499977930},{"_id":"node_modules/hexo-theme-aurora/_config.yml","hash":"e6b2335cb393444b8a1fc1ad65331f4a30bc8915","modified":1668499977931},{"_id":"node_modules/hexo-theme-aurora/jest.config.js","hash":"425f08cb718a56630ce61ae0686f35c55ef565df","modified":1668499977909},{"_id":"node_modules/hexo-theme-aurora/package.json","hash":"1b312a6a2de107ba9dc952614f1078c78664a4e4","modified":1668499977926},{"_id":"node_modules/hexo-theme-aurora/.circleci/config.yml","hash":"534051be311581f69aa8287120275a04539290e4","modified":1668499977933},{"_id":"node_modules/hexo-theme-aurora/data/cn.yml","hash":"4f5dcc1e2953df7a8e4e683c1a9115f6e0041f5e","modified":1668499977933},{"_id":"node_modules/hexo-theme-aurora/data/en.yml","hash":"7bbd6c0da0ae2f93f8a786a3be77fbe4e95a787e","modified":1668499977934},{"_id":"node_modules/hexo-theme-aurora/layout/index.ejs","hash":"94732830a65b718d2fa506b8598df44f14399fd8","modified":1668499977785},{"_id":"node_modules/hexo-theme-aurora/scripts/index.js","hash":"2a3c62a860581ee6813ca4bcaa7c952f614e818c","modified":1668499977886},{"_id":"node_modules/hexo-theme-aurora/source/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1668499977792},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1668499977931},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1668499977931},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/filters/index.js","hash":"5eacff9446dd6c9a7eb0a0c84be9187055440454","modified":1668499977902},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/category.js","hash":"0ae21ffcf6e471ebfb72ac62a833991fae86ec8a","modified":1668499977864},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/index.js","hash":"dfbb0fdbf990bd67684ed891a4aaa1fd8dcd23f2","modified":1668499977903},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/page.js","hash":"1be54ea9cdf8e293e67bf457075fcdd8a72b8779","modified":1668499977913},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/post.js","hash":"76c3268e8b6887fb1fd11c4d71004aad9dc215fc","modified":1668499977918},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/search.js","hash":"a2a636e1df76efdcaca37226b490afa539ce766b","modified":1668499977922},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/site.js","hash":"b5f5ce813b4b0b322eceb11b036dc65201604256","modified":1668499977922},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/statistic.js","hash":"1c641956e15cec96490de16a88ccc7bec0c9d5c4","modified":1668499977923},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/tag.js","hash":"975e79e73d2503a33dbc63655b948100cc46d44f","modified":1668499977924},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/mapper.js","hash":"7a99508d910321b90b4afa0df02ad90f62336901","modified":1668499977912},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/symbols-count-time.js","hash":"d1a81e31b2988edcdf4b4761cec7326a980f097a","modified":1668499977924},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/toc.js","hash":"5c7348c550ef7f164d492847801a360cdefc60a2","modified":1668499977925},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/truncate-html.js","hash":"49d4832af027eabe5b8383a24e66dceae761533e","modified":1668499977926},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/utils.js","hash":"93ff75f0e35a1dc40d5406cc097f5988dd820600","modified":1668499977926},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/injector/index.js","hash":"7ca562ea3af3068ee925b5a8afdce0eaa1e15e64","modified":1668499977908},{"_id":"node_modules/hexo-theme-aurora/source/static/css/404.1a6cd5bd.css","hash":"a7a4d83756520d8f6c410ac0ffe9a45d63868113","modified":1668499977709},{"_id":"node_modules/hexo-theme-aurora/source/static/css/about.32dfa3b0.css","hash":"614ef7c4e52877c76ffddb26192bf8fffddcb8d8","modified":1668499977715},{"_id":"node_modules/hexo-theme-aurora/source/static/css/archives.c0d49bd5.css","hash":"c56213315c57254d0a6e6301ef24c2186fef4d2b","modified":1668499977747},{"_id":"node_modules/hexo-theme-aurora/source/static/css/categories.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1668499977751},{"_id":"node_modules/hexo-theme-aurora/source/static/css/chunk-libs.eebac533.css","hash":"41226b6c29aadcc6190fe7c2c4c37464855b8453","modified":1668499977754},{"_id":"node_modules/hexo-theme-aurora/source/static/css/page.749ad047.css","hash":"6fcf0e6f3c628954c5f8105791e0e7f3e6512da6","modified":1668499977767},{"_id":"node_modules/hexo-theme-aurora/source/static/css/post.9f951a60.css","hash":"8e360582d745d6483fdfc18c46f75897b44721a6","modified":1668499977772},{"_id":"node_modules/hexo-theme-aurora/source/static/css/result.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1668499977775},{"_id":"node_modules/hexo-theme-aurora/source/static/css/tags.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1668499977778},{"_id":"node_modules/hexo-theme-aurora/source/static/img/default-cover.df7c128c.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1668499977817},{"_id":"node_modules/hexo-theme-aurora/source/static/js/404.00d640a8.js","hash":"74f1da9e0f953e73e4fe1a6554433f56fdcdf54d","modified":1668499977825},{"_id":"node_modules/hexo-theme-aurora/source/static/js/about.024aacd1.js","hash":"7ce2b3f7d232dd3b3930ac993bb841452e2cde89","modified":1668499977827},{"_id":"node_modules/hexo-theme-aurora/source/static/js/archives.574ac664.js","hash":"fbb094fb4f7a01bffd6975aca27142935bfdca73","modified":1668499977859},{"_id":"node_modules/hexo-theme-aurora/source/static/js/categories.90aa5475.js","hash":"0dde3d731fc665962a4c330338a2c663c330be26","modified":1668499977861},{"_id":"node_modules/hexo-theme-aurora/source/static/js/page.a02618ad.js","hash":"db775fbfbaa1cf8bbf4cc4f2b0a869519d508e3a","modified":1668499977912},{"_id":"node_modules/hexo-theme-aurora/source/static/js/post.cebfbaa4.js","hash":"53586f9dab5886a366e9397eb17088e74af5cde1","modified":1668499977913},{"_id":"node_modules/hexo-theme-aurora/source/static/js/result.39470350.js","hash":"f6f5ab2ca7274dad169ec600a419d1a2aeb2347c","modified":1668499977921},{"_id":"node_modules/hexo-theme-aurora/source/static/js/tags.2ad613f5.js","hash":"4f49139e435788710115fc884dc26a5b1e0d4833","modified":1668499977924},{"_id":"source/_posts/解决hexo博客中插入图片失败/image-20221117183848685.png","hash":"2a5b335a75f9b89360a87469193a12a7c33b4529","modified":1668681566337},{"_id":"node_modules/hexo-theme-aurora/source/static/css/app.0d31776f.css","hash":"43b43acd76bd8dc22f34cc49c7e026c45c3a5004","modified":1668499977739},{"_id":"node_modules/hexo-theme-aurora/source/static/js/app.6d2c358d.js","hash":"e176c20c22ce36e38935f463977e9b89b281c715","modified":1668499977858},{"_id":"node_modules/hexo-theme-aurora/source/static/js/chunk-libs.dc6146cd.js","hash":"534266637d09abf39278f4d3a21bd36728740105","modified":1668499977883},{"_id":"public/api/posts/1.json","hash":"7a21f49b48806bfd5e4c1155e71832a2fb78316a","modified":1668702843305},{"_id":"public/api/articles/解决hexo博客中插入图片失败.json","hash":"1ec2854481ada42b4808fbb377fca86404b8bb64","modified":1668702843305},{"_id":"public/api/articles/博客集成评论功能-Gitalk.json","hash":"4e20aa5d101b03d9e4fdfe166c1cffbd95ccea27","modified":1668702843305},{"_id":"public/api/articles/Hexo搭建博客.json","hash":"53a7846b080c4b708a94c88250a39638429413fb","modified":1668702843305},{"_id":"public/api/articles/hello-world.json","hash":"d1b69ac254dd9e2fbc0746ea5bc8e1e246627ca1","modified":1668702843305},{"_id":"public/api/features.json","hash":"baf88b2e0a53db37010d2f13c8ad92942e0ddacc","modified":1668702843305},{"_id":"public/api/authors/blog-author.json","hash":"cc982050b43894a318fcf9bbe6f207014795d796","modified":1668702843305},{"_id":"public/api/site.json","hash":"c808b8acd32cb89115f8744964cc95d1b28b4587","modified":1668702843305},{"_id":"public/api/categories.json","hash":"bcc95ffc787cbe0f32e71477ceae1b0bf9401d0f","modified":1668702843305},{"_id":"public/api/categories/blogs.json","hash":"2ee6456b65673844c958c07e8a94243cc643f522","modified":1668702843305},{"_id":"public/api/tags.json","hash":"40ab6772ace61092b656885f8f1771aa92d72a34","modified":1668702843305},{"_id":"public/api/tags/blog.json","hash":"7915f5d613798207e687a7a2968bcbdd778a1055","modified":1668702843305},{"_id":"public/api/tags/PS3.json","hash":"6a79f389ab172d76a1015b1fccb6356113627ac3","modified":1668702843305},{"_id":"public/api/tags/Games.json","hash":"5946ea6c99fb91bd109bd054ea1259b2d041543f","modified":1668702843305},{"_id":"public/api/pages/about/index.json","hash":"d7a0a9cb42d354cf50a55fcbf577668244264987","modified":1668702843305},{"_id":"public/api/pages/message-board/index.json","hash":"626be5fa4a7165f3315b58427dcc02efae4e1abf","modified":1668702843305},{"_id":"public/api/statistic.json","hash":"0996f3b1ec1385445e6eb1a444c89bb0d1e1bc0b","modified":1668702843305},{"_id":"public/api/search.json","hash":"1ef1dd302eb22c5605e500e8b2c8b97812a514ee","modified":1668702843305},{"_id":"public/post/解决hexo博客中插入图片失败.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/post/博客集成评论功能-Gitalk.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/post/Hexo搭建博客.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/post/hello-world.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1668702843305},{"_id":"public/index.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/tags/index.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/archives/index.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/page/about/index.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/page/message-board/index.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/tags/search/index.html","hash":"42e3adea321c56b6ac62be5874cd5847c705bb32","modified":1668702843305},{"_id":"public/svg/bilibili.svg","hash":"5d4b19f1569f5898062e113a3eda70732efad0d0","modified":1668702843305},{"_id":"public/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1668702843305},{"_id":"public/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1668702843305},{"_id":"public/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1668702843305},{"_id":"public/static/img/default-cover.df7c128c.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1668702843305},{"_id":"public/post/Hexo搭建博客/image-20221116153041011.png","hash":"47e98d58809f849bdd2a0e9959463e1033378b9f","modified":1668702843305},{"_id":"public/post/解决hexo博客中插入图片失败/image-20221117173919413.png","hash":"18ce106ab95d8880da3028c934af3f07c3316c8f","modified":1668702843305},{"_id":"public/post/Hexo搭建博客/image-20221116153606803.png","hash":"07b495e6a6bc369f08bf3396ccfedc4915969865","modified":1668702843305},{"_id":"public/post/博客集成评论功能-Gitalk/image-20221117161922198.png","hash":"97e7d2eec4d3a0c8b6afb8ab313321495ea67a99","modified":1668702843305},{"_id":"public/post/博客集成评论功能-Gitalk/image-20221117162810692.png","hash":"7c6ad1f2d2589fee4a89ecff9be4d3ee1a0283c7","modified":1668702843305},{"_id":"public/post/博客集成评论功能-Gitalk/image-20221117163158794.png","hash":"21d4bb055701431575019fe2811705af08a42bfe","modified":1668702843305},{"_id":"public/post/解决hexo博客中插入图片失败/image-20221117180553792.png","hash":"e0574035552a09844c5a648e15b7fdf0888614db","modified":1668702843305},{"_id":"public/static/css/404.1a6cd5bd.css","hash":"a7a4d83756520d8f6c410ac0ffe9a45d63868113","modified":1668702843305},{"_id":"public/static/css/about.32dfa3b0.css","hash":"614ef7c4e52877c76ffddb26192bf8fffddcb8d8","modified":1668702843305},{"_id":"public/static/css/archives.c0d49bd5.css","hash":"c56213315c57254d0a6e6301ef24c2186fef4d2b","modified":1668702843305},{"_id":"public/static/css/categories.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1668702843305},{"_id":"public/static/css/chunk-libs.eebac533.css","hash":"41226b6c29aadcc6190fe7c2c4c37464855b8453","modified":1668702843305},{"_id":"public/static/css/page.749ad047.css","hash":"6fcf0e6f3c628954c5f8105791e0e7f3e6512da6","modified":1668702843305},{"_id":"public/static/css/post.9f951a60.css","hash":"8e360582d745d6483fdfc18c46f75897b44721a6","modified":1668702843305},{"_id":"public/static/css/result.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1668702843305},{"_id":"public/static/css/tags.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1668702843305},{"_id":"public/static/js/404.00d640a8.js","hash":"74f1da9e0f953e73e4fe1a6554433f56fdcdf54d","modified":1668702843305},{"_id":"public/static/js/about.024aacd1.js","hash":"7ce2b3f7d232dd3b3930ac993bb841452e2cde89","modified":1668702843305},{"_id":"public/static/js/archives.574ac664.js","hash":"fbb094fb4f7a01bffd6975aca27142935bfdca73","modified":1668702843305},{"_id":"public/static/js/categories.90aa5475.js","hash":"0dde3d731fc665962a4c330338a2c663c330be26","modified":1668702843305},{"_id":"public/static/js/page.a02618ad.js","hash":"db775fbfbaa1cf8bbf4cc4f2b0a869519d508e3a","modified":1668702843305},{"_id":"public/static/js/post.cebfbaa4.js","hash":"53586f9dab5886a366e9397eb17088e74af5cde1","modified":1668702843305},{"_id":"public/static/js/result.39470350.js","hash":"f6f5ab2ca7274dad169ec600a419d1a2aeb2347c","modified":1668702843305},{"_id":"public/static/js/tags.2ad613f5.js","hash":"4f49139e435788710115fc884dc26a5b1e0d4833","modified":1668702843305},{"_id":"public/static/css/app.0d31776f.css","hash":"43b43acd76bd8dc22f34cc49c7e026c45c3a5004","modified":1668702843305},{"_id":"public/static/js/app.6d2c358d.js","hash":"e176c20c22ce36e38935f463977e9b89b281c715","modified":1668702843305},{"_id":"public/static/js/chunk-libs.dc6146cd.js","hash":"534266637d09abf39278f4d3a21bd36728740105","modified":1668702843305},{"_id":"public/post/解决hexo博客中插入图片失败/image-20221117183848685.png","hash":"2a5b335a75f9b89360a87469193a12a7c33b4529","modified":1668702843305}],"Category":[{"name":"blogs","_id":"clalal6mk0008jtlj2s52dq4p"}],"Data":[],"Page":[{"title":"about","date":"2022-11-15T08:25:35.000Z","feature":true,"tags":["练习"],"_content":"\n\nnihao","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-11-15 16:25:35\nfeature: true\ntags:\n- 练习\n---\n\n\nnihao","updated":"2022-11-15T16:32:01.648Z","path":"about/index.html","comments":1,"layout":"page","_id":"clalal6m70000jtlj1h1mewgw","content":"<p>nihao</p>\n","site":{"data":{}},"excerpt":"","more":"<p>nihao</p>\n"},{"title":"message-board","date":"2022-11-15T08:23:06.000Z","_content":"","source":"message-board/index.md","raw":"---\ntitle: message-board\ndate: 2022-11-15 16:23:06\n---\n","updated":"2022-11-15T08:23:06.791Z","path":"message-board/index.html","comments":1,"layout":"page","_id":"clalal6md0002jtljgitr0vzj","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"_post","title":"Hexo搭建博客","date":"2022-11-16T08:45:34.000Z","_content":"\n参考官方文档：https://hexo.io/zh-cn/\n\n## 前言\n\n​\t\t作为技术人员，都希望拥有一个自己的技术博客，在查阅资料选择Hexo+Github的博客系统，这里将其过程记录下来。\n\n> 博客部署在linux环境下, CentOS 7.x\n\n### 安装前提\n\n安装 Hexo 相当简单，只需要先安装下列应用程序即可：\n\n- [Node.js](http://nodejs.org/) (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)\n- [Git](http://git-scm.com/)\n\n如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 [安装 Hexo](https://hexo.io/zh-cn/docs/#安装-Hexo) 步骤。\n\n如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。\n\n![image-20221116153041011](image-20221116153041011.png)\n\n#### 安装 Git\n\n**两种方式**：在线安装（不推荐），解压安装。\n\n1. 在线安装（使用[yum](https://so.csdn.net/so/search?q=yum&spm=1001.2101.3001.7020)安装的版本为1.8.3，这个版本太老）\n\n   ~~~\n   yum install git\n   git --version\n   ~~~\n\n2. 解压安装\n\n   想要使用最新版的git，进入git 在GitHub上发布版本页面：https://github.com/git/git/tags  选择最新的tar.gz包下载即可。\n\n   ~~~bash\n   # 1. 上传到指定目录 /opt/software\n   # 2. 解压到当前目录\n   tar -zxvf git-2.38.1.tar.gz\n   rm -rf git-2.9.5.tar.gz \n   # 进入到解压后的文件夹\n   cd  ./git-2.38.1\n   # 3. 解压后的源码需要编译源码，不过在此之前需要安装编译所需要的依赖。中途出现提示的时候输入y即可\n   yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\n   # 4. 安装依赖时，自动安装了Git，因此需要卸载旧版本Git\n   git --version\n   yum remove git\n   # 5. 编译git源码\n   make prefix=/usr/local/git all\n   # 6. 安装git至/usr/local/git路径\n   make prefix=/usr/local/git install\n   \n   # 配置环境变量配置\n   vim /etc/profile\n   \n   # 在最底部加上\n   PATH=$PATH:/usr/local/git/bin\n   export PATH\n   \n   # 刷新环境变量\n   source /etc/profile\n   # 查看Git是否安装完成\n   git --version\n   ~~~\n\n   参考文章：\n\n   https://blog.csdn.net/w_shimmer/article/details/124342141\n\n   https://blog.csdn.net/weixin_43847283/article/details/124781559\n\n#### 安装 node\n\n1. 查看系统位数\n\n```bash\nuname -a\n```\n\n2. [官网下载对应文件](http://nodejs.cn/download/)\n\n![image-20221116153606803](image-20221116153606803.png)\n\n\n\n3. 下载下来的tar文件上传到服务器并且解压，然后通过建立[软连接](https://so.csdn.net/so/search?q=软连接&spm=1001.2101.3001.7020)变为全局\n\n   ~~~bash\n   cd /opt/software\n   # 上传文件\n   tar -zxvf node-v16.18.0-linux-x64.tar.xz \n   # 删除压缩包\n   rm -rf node-v16.18.0-linux-x64.tar.xz \n   # 重命名\n   mv node-v16.18.0-linux-x64/ node\n   # 确认一下nodejs下bin目录是否有node 和npm文件\n   cd node/bin\n   ls\n   \n   \n   # 建立软连接，变为全局\n   ln -s /opt/software/node/bin/npm /usr/local/bin\n   ln -s /opt/software/node/bin/node /usr/local/bin\n   ~~~\n\n4. 检验\n\n   ~~~bash\n   node -v\n   npm -v\n   ~~~\n\n   参考文章：\n\n   https://blog.csdn.net/weixin_43847283/article/details/124781443\n\n\n\n### 安装Hexo\n\n1. 所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```bash\ncd /opt/software\nmkdir hexo\ncd hexo/\nnpm install -g hexo-cli\n```\n\n2. hexo在nodejs的nodejs/bin目录可以找到hexo命令，采用**软连接**把hexo命令添加到全局\n\n~~~\n# 根据个人nodejs路径进行配置\nln -s /opt/software/node/bin/hexo   /usr/local/bin/hexo\n# 配置错了可以删除再重新配置\nrm -rf  /usr/local/bin/hexo\nln -s /opt/software/node/bin/hexo   /usr/local/bin/hexo\n\n\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server\n~~~\n\n查看是否生效\n\n~~~bash\nhexo -v\n~~~\n\n3. 部署hexo\n\n~~~bash\nhexo init blog\ncd blog\nnpm install\n# 启动\nhexo s\n~~~\n\n参考链接：\n\nhttps://blog.csdn.net/weixin_43847283/article/details/124781731","source":"_posts/Hexo搭建博客.md","raw":"---\nlayout: _post\ntitle: Hexo搭建博客\ndate: 2022-11-16 16:45:34\ntags:\n- blog\n---\n\n参考官方文档：https://hexo.io/zh-cn/\n\n## 前言\n\n​\t\t作为技术人员，都希望拥有一个自己的技术博客，在查阅资料选择Hexo+Github的博客系统，这里将其过程记录下来。\n\n> 博客部署在linux环境下, CentOS 7.x\n\n### 安装前提\n\n安装 Hexo 相当简单，只需要先安装下列应用程序即可：\n\n- [Node.js](http://nodejs.org/) (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)\n- [Git](http://git-scm.com/)\n\n如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 [安装 Hexo](https://hexo.io/zh-cn/docs/#安装-Hexo) 步骤。\n\n如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。\n\n![image-20221116153041011](image-20221116153041011.png)\n\n#### 安装 Git\n\n**两种方式**：在线安装（不推荐），解压安装。\n\n1. 在线安装（使用[yum](https://so.csdn.net/so/search?q=yum&spm=1001.2101.3001.7020)安装的版本为1.8.3，这个版本太老）\n\n   ~~~\n   yum install git\n   git --version\n   ~~~\n\n2. 解压安装\n\n   想要使用最新版的git，进入git 在GitHub上发布版本页面：https://github.com/git/git/tags  选择最新的tar.gz包下载即可。\n\n   ~~~bash\n   # 1. 上传到指定目录 /opt/software\n   # 2. 解压到当前目录\n   tar -zxvf git-2.38.1.tar.gz\n   rm -rf git-2.9.5.tar.gz \n   # 进入到解压后的文件夹\n   cd  ./git-2.38.1\n   # 3. 解压后的源码需要编译源码，不过在此之前需要安装编译所需要的依赖。中途出现提示的时候输入y即可\n   yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\n   # 4. 安装依赖时，自动安装了Git，因此需要卸载旧版本Git\n   git --version\n   yum remove git\n   # 5. 编译git源码\n   make prefix=/usr/local/git all\n   # 6. 安装git至/usr/local/git路径\n   make prefix=/usr/local/git install\n   \n   # 配置环境变量配置\n   vim /etc/profile\n   \n   # 在最底部加上\n   PATH=$PATH:/usr/local/git/bin\n   export PATH\n   \n   # 刷新环境变量\n   source /etc/profile\n   # 查看Git是否安装完成\n   git --version\n   ~~~\n\n   参考文章：\n\n   https://blog.csdn.net/w_shimmer/article/details/124342141\n\n   https://blog.csdn.net/weixin_43847283/article/details/124781559\n\n#### 安装 node\n\n1. 查看系统位数\n\n```bash\nuname -a\n```\n\n2. [官网下载对应文件](http://nodejs.cn/download/)\n\n![image-20221116153606803](image-20221116153606803.png)\n\n\n\n3. 下载下来的tar文件上传到服务器并且解压，然后通过建立[软连接](https://so.csdn.net/so/search?q=软连接&spm=1001.2101.3001.7020)变为全局\n\n   ~~~bash\n   cd /opt/software\n   # 上传文件\n   tar -zxvf node-v16.18.0-linux-x64.tar.xz \n   # 删除压缩包\n   rm -rf node-v16.18.0-linux-x64.tar.xz \n   # 重命名\n   mv node-v16.18.0-linux-x64/ node\n   # 确认一下nodejs下bin目录是否有node 和npm文件\n   cd node/bin\n   ls\n   \n   \n   # 建立软连接，变为全局\n   ln -s /opt/software/node/bin/npm /usr/local/bin\n   ln -s /opt/software/node/bin/node /usr/local/bin\n   ~~~\n\n4. 检验\n\n   ~~~bash\n   node -v\n   npm -v\n   ~~~\n\n   参考文章：\n\n   https://blog.csdn.net/weixin_43847283/article/details/124781443\n\n\n\n### 安装Hexo\n\n1. 所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```bash\ncd /opt/software\nmkdir hexo\ncd hexo/\nnpm install -g hexo-cli\n```\n\n2. hexo在nodejs的nodejs/bin目录可以找到hexo命令，采用**软连接**把hexo命令添加到全局\n\n~~~\n# 根据个人nodejs路径进行配置\nln -s /opt/software/node/bin/hexo   /usr/local/bin/hexo\n# 配置错了可以删除再重新配置\nrm -rf  /usr/local/bin/hexo\nln -s /opt/software/node/bin/hexo   /usr/local/bin/hexo\n\n\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server\n~~~\n\n查看是否生效\n\n~~~bash\nhexo -v\n~~~\n\n3. 部署hexo\n\n~~~bash\nhexo init blog\ncd blog\nnpm install\n# 启动\nhexo s\n~~~\n\n参考链接：\n\nhttps://blog.csdn.net/weixin_43847283/article/details/124781731","slug":"Hexo搭建博客","published":1,"updated":"2022-11-17T09:29:20.952Z","comments":1,"photos":[],"link":"","_id":"clalal6ma0001jtljdmflhcv7","content":"<p>参考官方文档：<a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>​        作为技术人员，都希望拥有一个自己的技术博客，在查阅资料选择Hexo+Github的博客系统，这里将其过程记录下来。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>博客部署在linux环境下, CentOS 7.x</p></blockquote>\n<h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p>\n<ul>\n<li><a href=\"http://nodejs.org/\">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li>\n<li><a href=\"http://git-scm.com/\">Git</a></li>\n</ul>\n<p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 <a href=\"https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo\">安装 Hexo</a> 步骤。</p>\n<p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p>\n<p><img src=\"/post/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20221116153041011.png\" alt=\"image-20221116153041011\"></p>\n<h4 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h4><p><strong>两种方式</strong>：在线安装（不推荐），解压安装。</p>\n<ol>\n<li><p>在线安装（使用<a href=\"https://so.csdn.net/so/search?q=yum&spm=1001.2101.3001.7020\">yum</a>安装的版本为1.8.3，这个版本太老）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install git\ngit --version</code></pre></li>\n<li><p>解压安装</p>\n<p>想要使用最新版的git，进入git 在GitHub上发布版本页面：<a href=\"https://github.com/git/git/tags\">https://github.com/git/git/tags</a>  选择最新的tar.gz包下载即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 1. 上传到指定目录 &#x2F;opt&#x2F;software\n# 2. 解压到当前目录\ntar -zxvf git-2.38.1.tar.gz\nrm -rf git-2.9.5.tar.gz \n# 进入到解压后的文件夹\ncd  .&#x2F;git-2.38.1\n# 3. 解压后的源码需要编译源码，不过在此之前需要安装编译所需要的依赖。中途出现提示的时候输入y即可\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\n# 4. 安装依赖时，自动安装了Git，因此需要卸载旧版本Git\ngit --version\nyum remove git\n# 5. 编译git源码\nmake prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git all\n# 6. 安装git至&#x2F;usr&#x2F;local&#x2F;git路径\nmake prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git install\n\n# 配置环境变量配置\nvim &#x2F;etc&#x2F;profile\n\n# 在最底部加上\nPATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;git&#x2F;bin\nexport PATH\n\n# 刷新环境变量\nsource &#x2F;etc&#x2F;profile\n# 查看Git是否安装完成\ngit --version</code></pre>\n\n<p>参考文章：</p>\n<p><a href=\"https://blog.csdn.net/w_shimmer/article/details/124342141\">https://blog.csdn.net/w_shimmer/article/details/124342141</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_43847283/article/details/124781559\">https://blog.csdn.net/weixin_43847283/article/details/124781559</a></p>\n</li>\n</ol>\n<h4 id=\"安装-node\"><a href=\"#安装-node\" class=\"headerlink\" title=\"安装 node\"></a>安装 node</h4><ol>\n<li>查看系统位数</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">uname -a</code></pre>\n\n<ol start=\"2\">\n<li><a href=\"http://nodejs.cn/download/\">官网下载对应文件</a></li>\n</ol>\n<p><img src=\"/post/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20221116153606803.png\" alt=\"image-20221116153606803\"></p>\n<ol start=\"3\">\n<li><p>下载下来的tar文件上传到服务器并且解压，然后通过建立<a href=\"https://so.csdn.net/so/search?q=%E8%BD%AF%E8%BF%9E%E6%8E%A5&spm=1001.2101.3001.7020\">软连接</a>变为全局</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;opt&#x2F;software\n# 上传文件\ntar -zxvf node-v16.18.0-linux-x64.tar.xz \n# 删除压缩包\nrm -rf node-v16.18.0-linux-x64.tar.xz \n# 重命名\nmv node-v16.18.0-linux-x64&#x2F; node\n# 确认一下nodejs下bin目录是否有node 和npm文件\ncd node&#x2F;bin\nls\n\n\n# 建立软连接，变为全局\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;local&#x2F;bin\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin</code></pre></li>\n<li><p>检验</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">node -v\nnpm -v</code></pre>\n\n<p>参考文章：</p>\n<p><a href=\"https://blog.csdn.net/weixin_43847283/article/details/124781443\">https://blog.csdn.net/weixin_43847283/article/details/124781443</a></p>\n</li>\n</ol>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><ol>\n<li>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;opt&#x2F;software\nmkdir hexo\ncd hexo&#x2F;\nnpm install -g hexo-cli</code></pre>\n\n<ol start=\"2\">\n<li>hexo在nodejs的nodejs/bin目录可以找到hexo命令，采用<strong>软连接</strong>把hexo命令添加到全局</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 根据个人nodejs路径进行配置\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;hexo   &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\n# 配置错了可以删除再重新配置\nrm -rf  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;hexo   &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\n\n\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server</code></pre>\n\n<p>查看是否生效</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo -v</code></pre>\n\n<ol start=\"3\">\n<li>部署hexo</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo init blog\ncd blog\nnpm install\n# 启动\nhexo s</code></pre>\n\n<p>参考链接：</p>\n<p><a href=\"https://blog.csdn.net/weixin_43847283/article/details/124781731\">https://blog.csdn.net/weixin_43847283/article/details/124781731</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>参考官方文档：<a href=\"https://hexo.io/zh-cn/\">https://hexo.io/zh-cn/</a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>​        作为技术人员，都希望拥有一个自己的技术博客，在查阅资料选择Hexo+Github的博客系统，这里将其过程记录下来。</p>\n<blockquote>\n<p>博客部署在linux环境下, CentOS 7.x</p>\n</blockquote>\n<h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p>\n<ul>\n<li><a href=\"http://nodejs.org/\">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li>\n<li><a href=\"http://git-scm.com/\">Git</a></li>\n</ul>\n<p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 <a href=\"https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo\">安装 Hexo</a> 步骤。</p>\n<p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p>\n<p><img src=\"/post/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20221116153041011.png\" alt=\"image-20221116153041011\"></p>\n<h4 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h4><p><strong>两种方式</strong>：在线安装（不推荐），解压安装。</p>\n<ol>\n<li><p>在线安装（使用<a href=\"https://so.csdn.net/so/search?q=yum&spm=1001.2101.3001.7020\">yum</a>安装的版本为1.8.3，这个版本太老）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">yum install git\ngit --version</code></pre></li>\n<li><p>解压安装</p>\n<p>想要使用最新版的git，进入git 在GitHub上发布版本页面：<a href=\"https://github.com/git/git/tags\">https://github.com/git/git/tags</a>  选择最新的tar.gz包下载即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 1. 上传到指定目录 &#x2F;opt&#x2F;software\n# 2. 解压到当前目录\ntar -zxvf git-2.38.1.tar.gz\nrm -rf git-2.9.5.tar.gz \n# 进入到解压后的文件夹\ncd  .&#x2F;git-2.38.1\n# 3. 解压后的源码需要编译源码，不过在此之前需要安装编译所需要的依赖。中途出现提示的时候输入y即可\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker\n# 4. 安装依赖时，自动安装了Git，因此需要卸载旧版本Git\ngit --version\nyum remove git\n# 5. 编译git源码\nmake prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git all\n# 6. 安装git至&#x2F;usr&#x2F;local&#x2F;git路径\nmake prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;git install\n\n# 配置环境变量配置\nvim &#x2F;etc&#x2F;profile\n\n# 在最底部加上\nPATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;git&#x2F;bin\nexport PATH\n\n# 刷新环境变量\nsource &#x2F;etc&#x2F;profile\n# 查看Git是否安装完成\ngit --version</code></pre>\n\n<p>参考文章：</p>\n<p><a href=\"https://blog.csdn.net/w_shimmer/article/details/124342141\">https://blog.csdn.net/w_shimmer/article/details/124342141</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_43847283/article/details/124781559\">https://blog.csdn.net/weixin_43847283/article/details/124781559</a></p>\n</li>\n</ol>\n<h4 id=\"安装-node\"><a href=\"#安装-node\" class=\"headerlink\" title=\"安装 node\"></a>安装 node</h4><ol>\n<li>查看系统位数</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">uname -a</code></pre>\n\n<ol start=\"2\">\n<li><a href=\"http://nodejs.cn/download/\">官网下载对应文件</a></li>\n</ol>\n<p><img src=\"/post/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/image-20221116153606803.png\" alt=\"image-20221116153606803\"></p>\n<ol start=\"3\">\n<li><p>下载下来的tar文件上传到服务器并且解压，然后通过建立<a href=\"https://so.csdn.net/so/search?q=%E8%BD%AF%E8%BF%9E%E6%8E%A5&spm=1001.2101.3001.7020\">软连接</a>变为全局</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;opt&#x2F;software\n# 上传文件\ntar -zxvf node-v16.18.0-linux-x64.tar.xz \n# 删除压缩包\nrm -rf node-v16.18.0-linux-x64.tar.xz \n# 重命名\nmv node-v16.18.0-linux-x64&#x2F; node\n# 确认一下nodejs下bin目录是否有node 和npm文件\ncd node&#x2F;bin\nls\n\n\n# 建立软连接，变为全局\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;local&#x2F;bin\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;node &#x2F;usr&#x2F;local&#x2F;bin</code></pre></li>\n<li><p>检验</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">node -v\nnpm -v</code></pre>\n\n<p>参考文章：</p>\n<p><a href=\"https://blog.csdn.net/weixin_43847283/article/details/124781443\">https://blog.csdn.net/weixin_43847283/article/details/124781443</a></p>\n</li>\n</ol>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><ol>\n<li>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;opt&#x2F;software\nmkdir hexo\ncd hexo&#x2F;\nnpm install -g hexo-cli</code></pre>\n\n<ol start=\"2\">\n<li>hexo在nodejs的nodejs/bin目录可以找到hexo命令，采用<strong>软连接</strong>把hexo命令添加到全局</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 根据个人nodejs路径进行配置\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;hexo   &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\n# 配置错了可以删除再重新配置\nrm -rf  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\nln -s &#x2F;opt&#x2F;software&#x2F;node&#x2F;bin&#x2F;hexo   &#x2F;usr&#x2F;local&#x2F;bin&#x2F;hexo\n\n\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server</code></pre>\n\n<p>查看是否生效</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo -v</code></pre>\n\n<ol start=\"3\">\n<li>部署hexo</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hexo init blog\ncd blog\nnpm install\n# 启动\nhexo s</code></pre>\n\n<p>参考链接：</p>\n<p><a href=\"https://blog.csdn.net/weixin_43847283/article/details/124781731\">https://blog.csdn.net/weixin_43847283/article/details/124781731</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags:\n- PS3\n- Games\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-11-15T16:35:25.315Z","updated":"2022-11-15T16:35:25.315Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clalal6me0003jtljawx59l8f","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new &quot;My New Post&quot;</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy</code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"layout":"_post","title":"博客集成评论功能---Gitalk","date":"2022-11-17T08:53:51.000Z","_content":"\n# 博客集成评论功能---Gitalk\n\n## 一、什么是 Gitalk\n\n`Gitalk` 的官方网站地址是: [gitalk.github.io](https://link.zhihu.com/?target=https%3A//gitalk.github.io/)，是一个基于 `GitHub Issue `和 `Preact` 开发的评论插件。\n\n## 二、特性\n\n* 使用 GitHub 登录\n* 支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]\n* 支持个人或组织\n* 无干扰模式（设置 distractionFreeMode 为 true 开启）\n* 快捷键提交评论 （cmd|ctrl + enter）\n\n## 三、安装\n\n#### 两种方式\n\n- 直接引入\n\n```yml\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n\n  <!-- or -->\n\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n  <script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n```\n\n- npm 安装\n\n```bash\nnpm i --save gitalk\nimport 'gitalk/dist/gitalk.css'\nimport Gitalk from 'gitalk'\n```\n\n## 四、使用\t\n\n1. 首先，您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论，\n\n   ![image-20221117161922198](image-20221117161922198.png)\n\n2. 创建完成后，点击`Settings` 打开 `Issues` 功能，默认是打开的\n\n3. 然后需要创建 **GitHub Application**，如果没有 [点击这里申请](https://github.com/settings/applications/new)，`Authorization callback URL` 填写当前使用插件页面的域名。\n\n4. 开创建应用程序页面，填写信息，两个 URL 就是你网站的域名。应用名称与描述可自起。 可参考下图\n\n   ![image-20221117162810692](image-20221117162810692.png)\n\n5. 应用程序创建成功后跳转到了以下页面，图中 `Client ID` 和 `Client Secret`是我们需要的东西\n\n   ![image-20221117163158794](image-20221117163158794.png)\n\n## 五、集成 Gitalk\n\n\n\n### 方式一\n\n只需要将如下代码引入你想添加评论的 html 或者 jsp 页面中就可以使用了\n\n~~~js\n<!-- 引入 -->\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n\n<!-- 在页面中添加一个容器-->\n<div id=\"gitalk-container\"></div>\n~~~\n\n使用下面的 Javascript 代码生成 gitalk 插件\n\n~~~js\n var gitalk = new Gitalk({   \n     clientID: 'GitHub Application Client ID',   //GitHub Application Client ID\n     clientSecret: 'GitHub Application Client Secret',   //GitHub Application Client Secret\n     repo: 'GitHub repo',   //仓库名称(GitHub repo)\n     owner: 'GitHub repo owner',   //仓库拥有者(GitHub repo owner) \n     admin: ['GitHub repo owner and collaborators, only these guys can initialize github issues'],   \n     id: location.pathname,      // 请确保你的 location 连接小于 50 个字符，否则，插件会生成失败   \n     distractionFreeMode: false // 专注模式 \n})  \n\n    gitalk.render('gitalk-container')\n~~~\n\n### 方式二 \n\n使用react的组件：\n\n```js\nimport GitalkComponent from 'gitalk/dist/gitalk-component'\n\n<GitalkComponent\n options={{\n clientID: '223232323adawdawd',\n clientSecret: 'ddadawdadaddawdawdawdawdwadawd',\n repo: 'dailyProject',\n owner: 'Mrrabbitan',\n admin: ['Mrrabbitan'],\n id: location.pathname, // Ensure uniqueness and length less than 50\n distractionFreeMode: false, // Facebook-like distraction free mode\n        }}\n ></GitalkComponent>\n```\n\n## 总结\n\n以上就是添加gitalk详细步骤，具体操作可参考官方文档：https://github.com/gitalk/gitalk/blob/master/readme-cn.md\n\n\n\n### 注意\n\n1. 如若第一次进入时评论模块加载不出来，需要注册 `Github Application` 的账号登录评论模块后刷新页面，就可以正常使用了。\n2. GitHub 对 Issue 的 label 存在限制，不能超过 50 个字符。\n   1. PS: label 标签就是文章页面的链接地址，如果地址过长，会导致加载 Gitalk 插件失败。\n   2. 解决方案，可参考链接：https://github.com/gitalk/gitalk/issues/102\n\n\n\n参考文章：\n\n[平酱的填坑札记](https://www.zhihu.com/column/c_1089178309891493888)：博客集成评论功能---Gitalk\n\n[超Ren专属](https://blog.csdn.net/qq_39052513)：超 Nice 的评论组件 —— Gitalk\n\n[官方文档](https://github.com/gitalk/gitalk/blob/master/readme-cn.md)：https://github.com/gitalk/gitalk/blob/master/readme-cn.md","source":"_posts/博客集成评论功能-Gitalk.md","raw":"---\nlayout: _post\ntitle: 博客集成评论功能---Gitalk\ndate: 2022-11-17 16:53:51\ntags:\n- blog\n---\n\n# 博客集成评论功能---Gitalk\n\n## 一、什么是 Gitalk\n\n`Gitalk` 的官方网站地址是: [gitalk.github.io](https://link.zhihu.com/?target=https%3A//gitalk.github.io/)，是一个基于 `GitHub Issue `和 `Preact` 开发的评论插件。\n\n## 二、特性\n\n* 使用 GitHub 登录\n* 支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]\n* 支持个人或组织\n* 无干扰模式（设置 distractionFreeMode 为 true 开启）\n* 快捷键提交评论 （cmd|ctrl + enter）\n\n## 三、安装\n\n#### 两种方式\n\n- 直接引入\n\n```yml\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n\n  <!-- or -->\n\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n  <script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n```\n\n- npm 安装\n\n```bash\nnpm i --save gitalk\nimport 'gitalk/dist/gitalk.css'\nimport Gitalk from 'gitalk'\n```\n\n## 四、使用\t\n\n1. 首先，您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论，\n\n   ![image-20221117161922198](image-20221117161922198.png)\n\n2. 创建完成后，点击`Settings` 打开 `Issues` 功能，默认是打开的\n\n3. 然后需要创建 **GitHub Application**，如果没有 [点击这里申请](https://github.com/settings/applications/new)，`Authorization callback URL` 填写当前使用插件页面的域名。\n\n4. 开创建应用程序页面，填写信息，两个 URL 就是你网站的域名。应用名称与描述可自起。 可参考下图\n\n   ![image-20221117162810692](image-20221117162810692.png)\n\n5. 应用程序创建成功后跳转到了以下页面，图中 `Client ID` 和 `Client Secret`是我们需要的东西\n\n   ![image-20221117163158794](image-20221117163158794.png)\n\n## 五、集成 Gitalk\n\n\n\n### 方式一\n\n只需要将如下代码引入你想添加评论的 html 或者 jsp 页面中就可以使用了\n\n~~~js\n<!-- 引入 -->\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"></script>\n\n<!-- 在页面中添加一个容器-->\n<div id=\"gitalk-container\"></div>\n~~~\n\n使用下面的 Javascript 代码生成 gitalk 插件\n\n~~~js\n var gitalk = new Gitalk({   \n     clientID: 'GitHub Application Client ID',   //GitHub Application Client ID\n     clientSecret: 'GitHub Application Client Secret',   //GitHub Application Client Secret\n     repo: 'GitHub repo',   //仓库名称(GitHub repo)\n     owner: 'GitHub repo owner',   //仓库拥有者(GitHub repo owner) \n     admin: ['GitHub repo owner and collaborators, only these guys can initialize github issues'],   \n     id: location.pathname,      // 请确保你的 location 连接小于 50 个字符，否则，插件会生成失败   \n     distractionFreeMode: false // 专注模式 \n})  \n\n    gitalk.render('gitalk-container')\n~~~\n\n### 方式二 \n\n使用react的组件：\n\n```js\nimport GitalkComponent from 'gitalk/dist/gitalk-component'\n\n<GitalkComponent\n options={{\n clientID: '223232323adawdawd',\n clientSecret: 'ddadawdadaddawdawdawdawdwadawd',\n repo: 'dailyProject',\n owner: 'Mrrabbitan',\n admin: ['Mrrabbitan'],\n id: location.pathname, // Ensure uniqueness and length less than 50\n distractionFreeMode: false, // Facebook-like distraction free mode\n        }}\n ></GitalkComponent>\n```\n\n## 总结\n\n以上就是添加gitalk详细步骤，具体操作可参考官方文档：https://github.com/gitalk/gitalk/blob/master/readme-cn.md\n\n\n\n### 注意\n\n1. 如若第一次进入时评论模块加载不出来，需要注册 `Github Application` 的账号登录评论模块后刷新页面，就可以正常使用了。\n2. GitHub 对 Issue 的 label 存在限制，不能超过 50 个字符。\n   1. PS: label 标签就是文章页面的链接地址，如果地址过长，会导致加载 Gitalk 插件失败。\n   2. 解决方案，可参考链接：https://github.com/gitalk/gitalk/issues/102\n\n\n\n参考文章：\n\n[平酱的填坑札记](https://www.zhihu.com/column/c_1089178309891493888)：博客集成评论功能---Gitalk\n\n[超Ren专属](https://blog.csdn.net/qq_39052513)：超 Nice 的评论组件 —— Gitalk\n\n[官方文档](https://github.com/gitalk/gitalk/blob/master/readme-cn.md)：https://github.com/gitalk/gitalk/blob/master/readme-cn.md","slug":"博客集成评论功能-Gitalk","published":1,"updated":"2022-11-17T09:26:15.461Z","comments":1,"photos":[],"link":"","_id":"clalal6mh0005jtlj4zyy1tl5","content":"<h1 id=\"博客集成评论功能—Gitalk\"><a href=\"#博客集成评论功能—Gitalk\" class=\"headerlink\" title=\"博客集成评论功能—Gitalk\"></a>博客集成评论功能—Gitalk</h1><h2 id=\"一、什么是-Gitalk\"><a href=\"#一、什么是-Gitalk\" class=\"headerlink\" title=\"一、什么是 Gitalk\"></a>一、什么是 Gitalk</h2><p><code>Gitalk</code> 的官方网站地址是: <a href=\"https://link.zhihu.com/?target=https://gitalk.github.io/\">gitalk.github.io</a>，是一个基于 <code>GitHub Issue </code>和 <code>Preact</code> 开发的评论插件。</p>\n<h2 id=\"二、特性\"><a href=\"#二、特性\" class=\"headerlink\" title=\"二、特性\"></a>二、特性</h2><ul>\n<li>使用 GitHub 登录</li>\n<li>支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]</li>\n<li>支持个人或组织</li>\n<li>无干扰模式（设置 distractionFreeMode 为 true 开启）</li>\n<li>快捷键提交评论 （cmd|ctrl + enter）</li>\n</ul>\n<h2 id=\"三、安装\"><a href=\"#三、安装\" class=\"headerlink\" title=\"三、安装\"></a>三、安装</h2><h4 id=\"两种方式\"><a href=\"#两种方式\" class=\"headerlink\" title=\"两种方式\"></a>两种方式</h4><ul>\n<li>直接引入</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\n&lt;!-- or --&gt;\n\n&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n\n<ul>\n<li>npm 安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm i --save gitalk\nimport &#39;gitalk&#x2F;dist&#x2F;gitalk.css&#39;\nimport Gitalk from &#39;gitalk&#39;</code></pre>\n\n<h2 id=\"四、使用\"><a href=\"#四、使用\" class=\"headerlink\" title=\"四、使用\"></a>四、使用</h2><ol>\n<li><p>首先，您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论，</p>\n<p><img src=\"/post/%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-Gitalk/image-20221117161922198.png\" alt=\"image-20221117161922198\"></p>\n</li>\n<li><p>创建完成后，点击<code>Settings</code> 打开 <code>Issues</code> 功能，默认是打开的</p>\n</li>\n<li><p>然后需要创建 <strong>GitHub Application</strong>，如果没有 <a href=\"https://github.com/settings/applications/new\">点击这里申请</a>，<code>Authorization callback URL</code> 填写当前使用插件页面的域名。</p>\n</li>\n<li><p>开创建应用程序页面，填写信息，两个 URL 就是你网站的域名。应用名称与描述可自起。 可参考下图</p>\n<p><img src=\"/post/%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-Gitalk/image-20221117162810692.png\" alt=\"image-20221117162810692\"></p>\n</li>\n<li><p>应用程序创建成功后跳转到了以下页面，图中 <code>Client ID</code> 和 <code>Client Secret</code>是我们需要的东西</p>\n<p><img src=\"/post/%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-Gitalk/image-20221117163158794.png\" alt=\"image-20221117163158794\"></p>\n</li>\n</ol>\n<h2 id=\"五、集成-Gitalk\"><a href=\"#五、集成-Gitalk\" class=\"headerlink\" title=\"五、集成 Gitalk\"></a>五、集成 Gitalk</h2><h3 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一\"></a>方式一</h3><p>只需要将如下代码引入你想添加评论的 html 或者 jsp 页面中就可以使用了</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;!-- 引入 --&gt;\n&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\n&lt;!-- 在页面中添加一个容器--&gt;\n&lt;div id&#x3D;&quot;gitalk-container&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<p>使用下面的 Javascript 代码生成 gitalk 插件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"> var gitalk &#x3D; new Gitalk(&#123;   \n     clientID: &#39;GitHub Application Client ID&#39;,   &#x2F;&#x2F;GitHub Application Client ID\n     clientSecret: &#39;GitHub Application Client Secret&#39;,   &#x2F;&#x2F;GitHub Application Client Secret\n     repo: &#39;GitHub repo&#39;,   &#x2F;&#x2F;仓库名称(GitHub repo)\n     owner: &#39;GitHub repo owner&#39;,   &#x2F;&#x2F;仓库拥有者(GitHub repo owner) \n     admin: [&#39;GitHub repo owner and collaborators, only these guys can initialize github issues&#39;],   \n     id: location.pathname,      &#x2F;&#x2F; 请确保你的 location 连接小于 50 个字符，否则，插件会生成失败   \n     distractionFreeMode: false &#x2F;&#x2F; 专注模式 \n&#125;)  \n\n    gitalk.render(&#39;gitalk-container&#39;)</code></pre>\n\n<h3 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h3><p>使用react的组件：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import GitalkComponent from &#39;gitalk&#x2F;dist&#x2F;gitalk-component&#39;\n\n&lt;GitalkComponent\n options&#x3D;&#123;&#123;\n clientID: &#39;223232323adawdawd&#39;,\n clientSecret: &#39;ddadawdadaddawdawdawdawdwadawd&#39;,\n repo: &#39;dailyProject&#39;,\n owner: &#39;Mrrabbitan&#39;,\n admin: [&#39;Mrrabbitan&#39;],\n id: location.pathname, &#x2F;&#x2F; Ensure uniqueness and length less than 50\n distractionFreeMode: false, &#x2F;&#x2F; Facebook-like distraction free mode\n        &#125;&#125;\n &gt;&lt;&#x2F;GitalkComponent&gt;</code></pre>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>以上就是添加gitalk详细步骤，具体操作可参考官方文档：<a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ol>\n<li>如若第一次进入时评论模块加载不出来，需要注册 <code>Github Application</code> 的账号登录评论模块后刷新页面，就可以正常使用了。</li>\n<li>GitHub 对 Issue 的 label 存在限制，不能超过 50 个字符。<ol>\n<li>PS: label 标签就是文章页面的链接地址，如果地址过长，会导致加载 Gitalk 插件失败。</li>\n<li>解决方案，可参考链接：<a href=\"https://github.com/gitalk/gitalk/issues/102\">https://github.com/gitalk/gitalk/issues/102</a></li>\n</ol>\n</li>\n</ol>\n<p>参考文章：</p>\n<p><a href=\"https://www.zhihu.com/column/c_1089178309891493888\">平酱的填坑札记</a>：博客集成评论功能—Gitalk</p>\n<p><a href=\"https://blog.csdn.net/qq_39052513\">超Ren专属</a>：超 Nice 的评论组件 —— Gitalk</p>\n<p><a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\">官方文档</a>：<a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"博客集成评论功能—Gitalk\"><a href=\"#博客集成评论功能—Gitalk\" class=\"headerlink\" title=\"博客集成评论功能—Gitalk\"></a>博客集成评论功能—Gitalk</h1><h2 id=\"一、什么是-Gitalk\"><a href=\"#一、什么是-Gitalk\" class=\"headerlink\" title=\"一、什么是 Gitalk\"></a>一、什么是 Gitalk</h2><p><code>Gitalk</code> 的官方网站地址是: <a href=\"https://link.zhihu.com/?target=https://gitalk.github.io/\">gitalk.github.io</a>，是一个基于 <code>GitHub Issue </code>和 <code>Preact</code> 开发的评论插件。</p>\n<h2 id=\"二、特性\"><a href=\"#二、特性\" class=\"headerlink\" title=\"二、特性\"></a>二、特性</h2><ul>\n<li>使用 GitHub 登录</li>\n<li>支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru, de, pl, ko, fa, ja]</li>\n<li>支持个人或组织</li>\n<li>无干扰模式（设置 distractionFreeMode 为 true 开启）</li>\n<li>快捷键提交评论 （cmd|ctrl + enter）</li>\n</ul>\n<h2 id=\"三、安装\"><a href=\"#三、安装\" class=\"headerlink\" title=\"三、安装\"></a>三、安装</h2><h4 id=\"两种方式\"><a href=\"#两种方式\" class=\"headerlink\" title=\"两种方式\"></a>两种方式</h4><ul>\n<li>直接引入</li>\n</ul>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\n&lt;!-- or --&gt;\n\n&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;gitalk&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;</code></pre>\n\n<ul>\n<li>npm 安装</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm i --save gitalk\nimport &#39;gitalk&#x2F;dist&#x2F;gitalk.css&#39;\nimport Gitalk from &#39;gitalk&#39;</code></pre>\n\n<h2 id=\"四、使用\"><a href=\"#四、使用\" class=\"headerlink\" title=\"四、使用\"></a>四、使用</h2><ol>\n<li><p>首先，您需要选择一个公共github存储库（已存在或创建一个新的github存储库）用于存储评论，</p>\n<p><img src=\"/post/%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-Gitalk/image-20221117161922198.png\" alt=\"image-20221117161922198\"></p>\n</li>\n<li><p>创建完成后，点击<code>Settings</code> 打开 <code>Issues</code> 功能，默认是打开的</p>\n</li>\n<li><p>然后需要创建 <strong>GitHub Application</strong>，如果没有 <a href=\"https://github.com/settings/applications/new\">点击这里申请</a>，<code>Authorization callback URL</code> 填写当前使用插件页面的域名。</p>\n</li>\n<li><p>开创建应用程序页面，填写信息，两个 URL 就是你网站的域名。应用名称与描述可自起。 可参考下图</p>\n<p><img src=\"/post/%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-Gitalk/image-20221117162810692.png\" alt=\"image-20221117162810692\"></p>\n</li>\n<li><p>应用程序创建成功后跳转到了以下页面，图中 <code>Client ID</code> 和 <code>Client Secret</code>是我们需要的东西</p>\n<p><img src=\"/post/%E5%8D%9A%E5%AE%A2%E9%9B%86%E6%88%90%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD-Gitalk/image-20221117163158794.png\" alt=\"image-20221117163158794\"></p>\n</li>\n</ol>\n<h2 id=\"五、集成-Gitalk\"><a href=\"#五、集成-Gitalk\" class=\"headerlink\" title=\"五、集成 Gitalk\"></a>五、集成 Gitalk</h2><h3 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一\"></a>方式一</h3><p>只需要将如下代码引入你想添加评论的 html 或者 jsp 页面中就可以使用了</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;!-- 引入 --&gt;\n&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.css&quot;&gt;\n  &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk@1&#x2F;dist&#x2F;gitalk.min.js&quot;&gt;&lt;&#x2F;script&gt;\n\n&lt;!-- 在页面中添加一个容器--&gt;\n&lt;div id&#x3D;&quot;gitalk-container&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<p>使用下面的 Javascript 代码生成 gitalk 插件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"> var gitalk &#x3D; new Gitalk(&#123;   \n     clientID: &#39;GitHub Application Client ID&#39;,   &#x2F;&#x2F;GitHub Application Client ID\n     clientSecret: &#39;GitHub Application Client Secret&#39;,   &#x2F;&#x2F;GitHub Application Client Secret\n     repo: &#39;GitHub repo&#39;,   &#x2F;&#x2F;仓库名称(GitHub repo)\n     owner: &#39;GitHub repo owner&#39;,   &#x2F;&#x2F;仓库拥有者(GitHub repo owner) \n     admin: [&#39;GitHub repo owner and collaborators, only these guys can initialize github issues&#39;],   \n     id: location.pathname,      &#x2F;&#x2F; 请确保你的 location 连接小于 50 个字符，否则，插件会生成失败   \n     distractionFreeMode: false &#x2F;&#x2F; 专注模式 \n&#125;)  \n\n    gitalk.render(&#39;gitalk-container&#39;)</code></pre>\n\n<h3 id=\"方式二\"><a href=\"#方式二\" class=\"headerlink\" title=\"方式二\"></a>方式二</h3><p>使用react的组件：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import GitalkComponent from &#39;gitalk&#x2F;dist&#x2F;gitalk-component&#39;\n\n&lt;GitalkComponent\n options&#x3D;&#123;&#123;\n clientID: &#39;223232323adawdawd&#39;,\n clientSecret: &#39;ddadawdadaddawdawdawdawdwadawd&#39;,\n repo: &#39;dailyProject&#39;,\n owner: &#39;Mrrabbitan&#39;,\n admin: [&#39;Mrrabbitan&#39;],\n id: location.pathname, &#x2F;&#x2F; Ensure uniqueness and length less than 50\n distractionFreeMode: false, &#x2F;&#x2F; Facebook-like distraction free mode\n        &#125;&#125;\n &gt;&lt;&#x2F;GitalkComponent&gt;</code></pre>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>以上就是添加gitalk详细步骤，具体操作可参考官方文档：<a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ol>\n<li>如若第一次进入时评论模块加载不出来，需要注册 <code>Github Application</code> 的账号登录评论模块后刷新页面，就可以正常使用了。</li>\n<li>GitHub 对 Issue 的 label 存在限制，不能超过 50 个字符。<ol>\n<li>PS: label 标签就是文章页面的链接地址，如果地址过长，会导致加载 Gitalk 插件失败。</li>\n<li>解决方案，可参考链接：<a href=\"https://github.com/gitalk/gitalk/issues/102\">https://github.com/gitalk/gitalk/issues/102</a></li>\n</ol>\n</li>\n</ol>\n<p>参考文章：</p>\n<p><a href=\"https://www.zhihu.com/column/c_1089178309891493888\">平酱的填坑札记</a>：博客集成评论功能—Gitalk</p>\n<p><a href=\"https://blog.csdn.net/qq_39052513\">超Ren专属</a>：超 Nice 的评论组件 —— Gitalk</p>\n<p><a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\">官方文档</a>：<a href=\"https://github.com/gitalk/gitalk/blob/master/readme-cn.md\">https://github.com/gitalk/gitalk/blob/master/readme-cn.md</a></p>\n"},{"layout":"_post","title":"解决hexo博客中插入图片失败","date":"2022-11-17T10:15:39.000Z","_content":"# 解决hexo博客中插入图片失败\n\n## 前言：\n\n​\t\t搭建博客后按照[官方文档](https://hexo.io/zh-cn/docs/asset-folders)配置后，图片一直无法显示，在网上百度一直没有解决方案，最终在官方文档评论区发现解决方案。思考了一下，遇到问题如果有评论区还是要优先查看一下再去百度，大家遇到相似问题概率比较大，还是要感谢评论区大神，推荐详细阅读第一个参考链接，启发很大。\n\n> 参考链接：\n>\n> [hexo博客中插入图片失败——解决思路及个人最终解决办法](https://blog.csdn.net/m0_43401436)\n>\n> [hexo+github快速搭建html5静态网页全过程](https://alvincr.com/2021/01/hexo-with-github_pages/#wang_ye_wu_fa_xian_shi_tu_pian)\n\n## 解决方案：\n\n### 1. 官网解决方案\n\n> 官方文档：https://hexo.io/zh-cn/docs/asset-folders\n\n#### 使用 Markdown 嵌入图片\n\n[hexo-renderer-marked](https://github.com/hexojs/hexo-renderer-marked) 3.1.0 引入了一个新的选项，其允许你无需使用 `asset_img` 标签插件就可以在 markdown 中嵌入图片\n\n如需启用：\n\n```yml\n_config.yml\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n启用后，资源图片将会被自动解析为其对应文章的路径。\n例如： `image.jpg` 位置为 `/2020/01/02/foo/image.jpg` ，这表示它是 `/2020/01/02/foo/` 文章的一张资源图片， `![](image.jpg)` 将会被解析为 `<img src=\"/2020/01/02/foo/image.jpg\">`\n\n### 2. 百度搜索得到解决方案\t\n\n* 方法1：设置图片直接引用网络资源\n* 方法2：使用hexo-asset-image插件\n\n`方案一`可以选择将markdown图片文件存放在云中，编写时直接引用云资源，考虑目前暂时还不需要所以放弃，选择`方案二`\n\n#### 方法2：使用hexo-asset-image插件\n\n1. 打开根目录下_config.yml文件找到post_asset_folder: true 设置为true,在下面添加(可参靠上文，官网解决方案：使用 Markdown 嵌入图片)：\n\n   ~~~yml\n   marked:\n     prependRoot: true\n     postAsset: true\n   ~~~\n\n2. 安装插件\n\n   ~~~bash\n   npm install https://github.com/CodeFalling/hexo-asset-image --save\n   ~~~\n\n3. 可以选择将Typora设置为./${filename} ，目的是自动在目录下建立与文件同名的文件夹方便存取\n\n   ![image-20221117180553792](image-20221117180553792.png)\n\n至此就解决图片无法加载问题，就已解决\n\n## 注意\n\n1. 若要上传服务器，图片引用链接应直接保存文件名即可，放入博客同名文件下即可。\n\n   ![image-20221117181857969](image-20221117181857969.png)\n\n","source":"_posts/解决hexo博客中插入图片失败.md","raw":"---\nlayout: _post\ntitle: 解决hexo博客中插入图片失败\ndate: 2022-11-17 18:15:39\ntags:\n  - blog\ncategories:\n  - blogs\n---\n# 解决hexo博客中插入图片失败\n\n## 前言：\n\n​\t\t搭建博客后按照[官方文档](https://hexo.io/zh-cn/docs/asset-folders)配置后，图片一直无法显示，在网上百度一直没有解决方案，最终在官方文档评论区发现解决方案。思考了一下，遇到问题如果有评论区还是要优先查看一下再去百度，大家遇到相似问题概率比较大，还是要感谢评论区大神，推荐详细阅读第一个参考链接，启发很大。\n\n> 参考链接：\n>\n> [hexo博客中插入图片失败——解决思路及个人最终解决办法](https://blog.csdn.net/m0_43401436)\n>\n> [hexo+github快速搭建html5静态网页全过程](https://alvincr.com/2021/01/hexo-with-github_pages/#wang_ye_wu_fa_xian_shi_tu_pian)\n\n## 解决方案：\n\n### 1. 官网解决方案\n\n> 官方文档：https://hexo.io/zh-cn/docs/asset-folders\n\n#### 使用 Markdown 嵌入图片\n\n[hexo-renderer-marked](https://github.com/hexojs/hexo-renderer-marked) 3.1.0 引入了一个新的选项，其允许你无需使用 `asset_img` 标签插件就可以在 markdown 中嵌入图片\n\n如需启用：\n\n```yml\n_config.yml\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n启用后，资源图片将会被自动解析为其对应文章的路径。\n例如： `image.jpg` 位置为 `/2020/01/02/foo/image.jpg` ，这表示它是 `/2020/01/02/foo/` 文章的一张资源图片， `![](image.jpg)` 将会被解析为 `<img src=\"/2020/01/02/foo/image.jpg\">`\n\n### 2. 百度搜索得到解决方案\t\n\n* 方法1：设置图片直接引用网络资源\n* 方法2：使用hexo-asset-image插件\n\n`方案一`可以选择将markdown图片文件存放在云中，编写时直接引用云资源，考虑目前暂时还不需要所以放弃，选择`方案二`\n\n#### 方法2：使用hexo-asset-image插件\n\n1. 打开根目录下_config.yml文件找到post_asset_folder: true 设置为true,在下面添加(可参靠上文，官网解决方案：使用 Markdown 嵌入图片)：\n\n   ~~~yml\n   marked:\n     prependRoot: true\n     postAsset: true\n   ~~~\n\n2. 安装插件\n\n   ~~~bash\n   npm install https://github.com/CodeFalling/hexo-asset-image --save\n   ~~~\n\n3. 可以选择将Typora设置为./${filename} ，目的是自动在目录下建立与文件同名的文件夹方便存取\n\n   ![image-20221117180553792](image-20221117180553792.png)\n\n至此就解决图片无法加载问题，就已解决\n\n## 注意\n\n1. 若要上传服务器，图片引用链接应直接保存文件名即可，放入博客同名文件下即可。\n\n   ![image-20221117181857969](image-20221117181857969.png)\n\n","slug":"解决hexo博客中插入图片失败","published":1,"updated":"2022-11-17T10:34:49.527Z","comments":1,"photos":[],"link":"","_id":"clalal6mi0006jtlj1djoee5w","content":"<h1 id=\"解决hexo博客中插入图片失败\"><a href=\"#解决hexo博客中插入图片失败\" class=\"headerlink\" title=\"解决hexo博客中插入图片失败\"></a>解决hexo博客中插入图片失败</h1><h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>​        搭建博客后按照<a href=\"https://hexo.io/zh-cn/docs/asset-folders\">官方文档</a>配置后，图片一直无法显示，在网上百度一直没有解决方案，最终在官方文档评论区发现解决方案。思考了一下，遇到问题如果有评论区还是要优先查看一下再去百度，大家遇到相似问题概率比较大，还是要感谢评论区大神，推荐详细阅读第一个参考链接，启发很大。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>参考链接：</p>\n<p><a href=\"https://blog.csdn.net/m0_43401436\">hexo博客中插入图片失败——解决思路及个人最终解决办法</a></p>\n<p><a href=\"https://alvincr.com/2021/01/hexo-with-github_pages/#wang_ye_wu_fa_xian_shi_tu_pian\">hexo+github快速搭建html5静态网页全过程</a></p></blockquote>\n<h2 id=\"解决方案：\"><a href=\"#解决方案：\" class=\"headerlink\" title=\"解决方案：\"></a>解决方案：</h2><h3 id=\"1-官网解决方案\"><a href=\"#1-官网解决方案\" class=\"headerlink\" title=\"1. 官网解决方案\"></a>1. 官网解决方案</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>官方文档：<a href=\"https://hexo.io/zh-cn/docs/asset-folders\">https://hexo.io/zh-cn/docs/asset-folders</a></p></blockquote>\n<h4 id=\"使用-Markdown-嵌入图片\"><a href=\"#使用-Markdown-嵌入图片\" class=\"headerlink\" title=\"使用 Markdown 嵌入图片\"></a>使用 Markdown 嵌入图片</h4><p><a href=\"https://github.com/hexojs/hexo-renderer-marked\">hexo-renderer-marked</a> 3.1.0 引入了一个新的选项，其允许你无需使用 <code>asset_img</code> 标签插件就可以在 markdown 中嵌入图片</p>\n<p>如需启用：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">_config.yml\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true</code></pre>\n\n<p>启用后，资源图片将会被自动解析为其对应文章的路径。<br>例如： <code>image.jpg</code> 位置为 <code>/2020/01/02/foo/image.jpg</code> ，这表示它是 <code>/2020/01/02/foo/</code> 文章的一张资源图片， <code>![](image.jpg)</code> 将会被解析为 <code>&lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;</code></p>\n<h3 id=\"2-百度搜索得到解决方案\"><a href=\"#2-百度搜索得到解决方案\" class=\"headerlink\" title=\"2. 百度搜索得到解决方案\"></a>2. 百度搜索得到解决方案</h3><ul>\n<li>方法1：设置图片直接引用网络资源</li>\n<li>方法2：使用hexo-asset-image插件</li>\n</ul>\n<p><code>方案一</code>可以选择将markdown图片文件存放在云中，编写时直接引用云资源，考虑目前暂时还不需要所以放弃，选择<code>方案二</code></p>\n<h4 id=\"方法2：使用hexo-asset-image插件\"><a href=\"#方法2：使用hexo-asset-image插件\" class=\"headerlink\" title=\"方法2：使用hexo-asset-image插件\"></a>方法2：使用hexo-asset-image插件</h4><ol>\n<li><p>打开根目录下_config.yml文件找到post_asset_folder: true 设置为true,在下面添加(可参靠上文，官网解决方案：使用 Markdown 嵌入图片)：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">marked:\n  prependRoot: true\n  postAsset: true</code></pre></li>\n<li><p>安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</code></pre></li>\n<li><p>可以选择将Typora设置为./${filename} ，目的是自动在目录下建立与文件同名的文件夹方便存取</p>\n<p><img src=\"/post/%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E5%A4%B1%E8%B4%A5/image-20221117180553792.png\" alt=\"image-20221117180553792\"></p>\n</li>\n</ol>\n<p>至此就解决图片无法加载问题，就已解决</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><ol>\n<li><p>若要上传服务器，图片引用链接应直接保存文件名即可，放入博客同名文件下即可。</p>\n<p><img src=\"/image-20221117181857969.png\" alt=\"image-20221117181857969\"></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"解决hexo博客中插入图片失败\"><a href=\"#解决hexo博客中插入图片失败\" class=\"headerlink\" title=\"解决hexo博客中插入图片失败\"></a>解决hexo博客中插入图片失败</h1><h2 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h2><p>​        搭建博客后按照<a href=\"https://hexo.io/zh-cn/docs/asset-folders\">官方文档</a>配置后，图片一直无法显示，在网上百度一直没有解决方案，最终在官方文档评论区发现解决方案。思考了一下，遇到问题如果有评论区还是要优先查看一下再去百度，大家遇到相似问题概率比较大，还是要感谢评论区大神，推荐详细阅读第一个参考链接，启发很大。</p>\n<blockquote>\n<p>参考链接：</p>\n<p><a href=\"https://blog.csdn.net/m0_43401436\">hexo博客中插入图片失败——解决思路及个人最终解决办法</a></p>\n<p><a href=\"https://alvincr.com/2021/01/hexo-with-github_pages/#wang_ye_wu_fa_xian_shi_tu_pian\">hexo+github快速搭建html5静态网页全过程</a></p>\n</blockquote>\n<h2 id=\"解决方案：\"><a href=\"#解决方案：\" class=\"headerlink\" title=\"解决方案：\"></a>解决方案：</h2><h3 id=\"1-官网解决方案\"><a href=\"#1-官网解决方案\" class=\"headerlink\" title=\"1. 官网解决方案\"></a>1. 官网解决方案</h3><blockquote>\n<p>官方文档：<a href=\"https://hexo.io/zh-cn/docs/asset-folders\">https://hexo.io/zh-cn/docs/asset-folders</a></p>\n</blockquote>\n<h4 id=\"使用-Markdown-嵌入图片\"><a href=\"#使用-Markdown-嵌入图片\" class=\"headerlink\" title=\"使用 Markdown 嵌入图片\"></a>使用 Markdown 嵌入图片</h4><p><a href=\"https://github.com/hexojs/hexo-renderer-marked\">hexo-renderer-marked</a> 3.1.0 引入了一个新的选项，其允许你无需使用 <code>asset_img</code> 标签插件就可以在 markdown 中嵌入图片</p>\n<p>如需启用：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">_config.yml\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true</code></pre>\n\n<p>启用后，资源图片将会被自动解析为其对应文章的路径。<br>例如： <code>image.jpg</code> 位置为 <code>/2020/01/02/foo/image.jpg</code> ，这表示它是 <code>/2020/01/02/foo/</code> 文章的一张资源图片， <code>![](image.jpg)</code> 将会被解析为 <code>&lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;</code></p>\n<h3 id=\"2-百度搜索得到解决方案\"><a href=\"#2-百度搜索得到解决方案\" class=\"headerlink\" title=\"2. 百度搜索得到解决方案\"></a>2. 百度搜索得到解决方案</h3><ul>\n<li>方法1：设置图片直接引用网络资源</li>\n<li>方法2：使用hexo-asset-image插件</li>\n</ul>\n<p><code>方案一</code>可以选择将markdown图片文件存放在云中，编写时直接引用云资源，考虑目前暂时还不需要所以放弃，选择<code>方案二</code></p>\n<h4 id=\"方法2：使用hexo-asset-image插件\"><a href=\"#方法2：使用hexo-asset-image插件\" class=\"headerlink\" title=\"方法2：使用hexo-asset-image插件\"></a>方法2：使用hexo-asset-image插件</h4><ol>\n<li><p>打开根目录下_config.yml文件找到post_asset_folder: true 设置为true,在下面添加(可参靠上文，官网解决方案：使用 Markdown 嵌入图片)：</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">marked:\n  prependRoot: true\n  postAsset: true</code></pre></li>\n<li><p>安装插件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</code></pre></li>\n<li><p>可以选择将Typora设置为./${filename} ，目的是自动在目录下建立与文件同名的文件夹方便存取</p>\n<p><img src=\"/post/%E8%A7%A3%E5%86%B3hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E5%A4%B1%E8%B4%A5/image-20221117180553792.png\" alt=\"image-20221117180553792\"></p>\n</li>\n</ol>\n<p>至此就解决图片无法加载问题，就已解决</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><ol>\n<li><p>若要上传服务器，图片引用链接应直接保存文件名即可，放入博客同名文件下即可。</p>\n<p><img src=\"/image-20221117181857969.png\" alt=\"image-20221117181857969\"></p>\n</li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/Hexo搭建博客/image-20221116153041011.png","post":"clalal6ma0001jtljdmflhcv7","slug":"image-20221116153041011.png","modified":1,"renderable":1},{"_id":"source/_posts/Hexo搭建博客/image-20221116153606803.png","post":"clalal6ma0001jtljdmflhcv7","slug":"image-20221116153606803.png","modified":1,"renderable":1},{"_id":"source/_posts/博客集成评论功能-Gitalk/image-20221117161922198.png","post":"clalal6mh0005jtlj4zyy1tl5","slug":"image-20221117161922198.png","modified":1,"renderable":1},{"_id":"source/_posts/博客集成评论功能-Gitalk/image-20221117162810692.png","post":"clalal6mh0005jtlj4zyy1tl5","slug":"image-20221117162810692.png","modified":1,"renderable":1},{"_id":"source/_posts/博客集成评论功能-Gitalk/image-20221117163158794.png","post":"clalal6mh0005jtlj4zyy1tl5","slug":"image-20221117163158794.png","modified":1,"renderable":1},{"_id":"source/_posts/解决hexo博客中插入图片失败/image-20221117173919413.png","post":"clalal6mi0006jtlj1djoee5w","slug":"image-20221117173919413.png","modified":1,"renderable":1},{"_id":"source/_posts/解决hexo博客中插入图片失败/image-20221117180553792.png","post":"clalal6mi0006jtlj1djoee5w","slug":"image-20221117180553792.png","modified":1,"renderable":1},{"_id":"source/_posts/解决hexo博客中插入图片失败/image-20221117183848685.png","post":"clalal6mi0006jtlj1djoee5w","slug":"image-20221117183848685.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"clalal6mi0006jtlj1djoee5w","category_id":"clalal6mk0008jtlj2s52dq4p","_id":"clalal6mm000djtlj7vip4fhi"}],"PostTag":[{"post_id":"clalal6mi0006jtlj1djoee5w","tag_id":"clalal6mf0004jtlj8nkachme","_id":"clalal6mk0009jtlj356daog0"},{"post_id":"clalal6ma0001jtljdmflhcv7","tag_id":"clalal6mf0004jtlj8nkachme","_id":"clalal6mk000ajtljdcks155x"},{"post_id":"clalal6me0003jtljawx59l8f","tag_id":"clalal6mj0007jtlj60nf1jef","_id":"clalal6mm000ejtlj6cruenqw"},{"post_id":"clalal6me0003jtljawx59l8f","tag_id":"clalal6ml000bjtlj97jd6vil","_id":"clalal6mn000fjtlj0esd7190"},{"post_id":"clalal6mh0005jtlj4zyy1tl5","tag_id":"clalal6mf0004jtlj8nkachme","_id":"clalal6mn000gjtlj9flh4t94"}],"Tag":[{"name":"blog","_id":"clalal6mf0004jtlj8nkachme"},{"name":"PS3","_id":"clalal6mj0007jtlj60nf1jef"},{"name":"Games","_id":"clalal6ml000bjtlj97jd6vil"}]}}